import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'org.spongepowered.plugin' version '0.8.1'
    id "net.kyori.blossom" version "1.1.0"
}

version = modVersion
group = modGroup

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://repo.spongepowered.org/maven' }
    maven { url 'https://jitpack.io' }
}
dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.0'

    implementation project(':api')
    implementation project(':common')
    implementation project(':MSRepository:msr-api')
    implementation project(':MSRepository:msr-api:api-config')
    implementation project(':MSRepository:msr-api:api-repository')
    implementation project(':MSRepository:msr-api:api-repository:api-repository-json')
    implementation project(':MSRepository:msr-api:api-repository:api-repository-mongodb')
    implementation project(':MSRepository:msr-api:api-repository:api-repository-nitrite')
    implementation project(':MSRepository:msr-common:common-config')
    implementation project(':MSRepository:msr-common:common-repository')
    implementation project(':MSRepository:msr-common:common-repository:common-repository-json')
    implementation project(':MSRepository:msr-common:common-repository:common-repository-mongodb')
    implementation project(':MSRepository:msr-common:common-repository:common-repository-nitrite')
    implementation project(':MSRepository:msr-sponge')

    implementation guice
//    implementation h2
    implementation javasisst
    implementation jsondb
    implementation mongo_java_driver
    implementation mongodb_driver_sync
    implementation morphia
    implementation nitrite

    compileOnly('org.spongepowered:spongeapi:7.2.0-SNAPSHOT') {
        exclude(module: 'configurate-gson')
        exclude(module: 'configurate-yaml')
    }
}

shadowJar {
    archiveName = "MSDataSync-Sponge-${modVersion}.jar"

    dependencies {
        include project(':api')
        include project(':common')
        include project(':MSRepository:msr-api')
        include project(':MSRepository:msr-api:api-config')
        include project(':MSRepository:msr-api:api-repository')
        include project(':MSRepository:msr-api:api-repository:api-repository-json')
        include project(':MSRepository:msr-api:api-repository:api-repository-mongodb')
        include project(':MSRepository:msr-api:api-repository:api-repository-nitrite')

        include project(':MSRepository:msr-common:common-config')
        include project(':MSRepository:msr-common:common-repository')
        include project(':MSRepository:msr-common:common-repository:common-repository-json')
        include project(':MSRepository:msr-common:common-repository:common-repository-mongodb')
        include project(':MSRepository:msr-common:common-repository:common-repository-nitrite')
        include project(':MSRepository:msr-sponge')

        include dependency(beanutils)
        include dependency(bson)
//        include dependency(h2)
        include dependency(jackson_annotations)
        include dependency(jackson_core)
        include dependency(jackson_databind)
        include dependency(jackson_datatype_jdk8)
        include dependency(jackson_datatype_jsr310)
        include dependency(jackson_module)
        include dependency(jasypt)
        include dependency(javasisst)
        include dependency(jsondb)
        include dependency(jxpath)
        include dependency(mongo_java_driver)
        include dependency(mongodb_driver_sync)
        include dependency(morphia)
        include dependency(nitrite)
        include dependency(objenesis)
        include dependency(okhttp3)
        include dependency(podam)
        include dependency(reflections)

        relocate 'com.fasterxml', 'relocated.com.fasterxml'
        relocate 'org.reflections', 'relocated.org.reflections'
        relocate 'org.javassist', 'relocated.org.javassist'
        relocate 'org.objenesis', 'relocated.org.objenesis'
        relocate 'org.apache', 'relocated.org.apache'
        relocate 'org.bson', 'relocated.org.bson'
        relocate 'org.dizitart', 'relocated.org.dizitart'
        relocate 'org.h2', 'relocated.org.h2'
        relocate 'org.mongodb', 'relocated.org.mongodb'
        relocate 'com.mongodb', 'relocated.com.mongodb'
        relocate 'javassist', 'relocated.javassist'
        relocate 'okhttp3', 'relocated.okhttp3'
        relocate 'org.jasypt', 'relocated.org.jasypt'
    }
}

blossom {
    replaceToken '$modVersion', modVersion
    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd-HH:mm:ss z")
    format.setTimeZone(TimeZone.getTimeZone("UTC"))
    String buildDate = format.format(new Date())
    replaceToken '$buildDate', buildDate
}

artifacts {
    archives shadowJar
}

test {
    useJUnitPlatform()
}
